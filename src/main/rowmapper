public class RecordLogRowMapper implements RowMapper<RecordLog> {
    @Override
    public RecordLog mapRow(ResultSet rs, int rowNum) throws SQLException {
        RecordLog recordLog = new RecordLog();
        recordLog.setId(rs.getLong("KTI_ID"));
        recordLog.setTopicName(rs.getString("KTI_TOPIC"));
        recordLog.setAppName(rs.getString("KTI_APP_NAME"));
        recordLog.setType(rs.getString("KTI_TYPE"));
        recordLog.setJsonString(rs.getString("KTI_JSON"));
        recordLog.setStatus(rs.getString("KTI_STATUS"));
        recordLog.setErrorMessage(rs.getString("KTI_ERROR_MESSAGE"));
        recordLog.setErrorCNT(rs.getInt("KTI_ERROR_CNT"));
        recordLog.setCreatedTimestamp(rs.getTimestamp("KTI_CREATED_TIMESTAMP").toLocalDateTime());
        recordLog.setUpdatedTimestamp(rs.getTimestamp("KTI_LAST_UPDATED_TIMESTAMP").toLocalDateTime());
        return recordLog;
    }

public void insertRecordsInBatches(List<RecordLog> recordLogs) {
    int batchSize = 500;  // Adjust batch size as needed

    for (int i = 0; i < recordLogs.size(); i += batchSize) {
        int end = Math.min(i + batchSize, recordLogs.size());
        List<RecordLog> batchList = recordLogs.subList(i, end);
        insertRecordsBatch(batchList);
    }
}

}
